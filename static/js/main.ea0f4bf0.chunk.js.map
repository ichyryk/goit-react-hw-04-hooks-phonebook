{"version":3,"sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Wrapper/Wrapper.styled.jsx","components/Wrapper/Wrapper.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js"],"names":["CustomButton","styled","button","Button","text","CustomForm","form","Form","onSubmit","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleChange","e","target","value","resetForm","preventDefault","type","placeholder","id","onChange","pattern","title","required","Container","div","Wrapper","children","List","ContactList","contacts","onDeleteContact","map","onClick","Filter","App","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","normalizedFilter","toLowerCase","getVisibleContacts","includes","normalizedName","find","contact","alert","newContact","currentTarget","length","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea0f4bf0.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const CustomButton = styled.button`\n  background-color: #010101;\n  border: none;\n  outline: none;\n  padding: 2px 8px;\n  color: #fff;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 24px;\n  cursor: pointer;\n`;\n","import { CustomButton } from './Button.styled';\n\nfunction Button({ text }) {\n  return <CustomButton>{text}</CustomButton>;\n}\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const CustomForm = styled.form`\n  padding: 20px 30px;\n  & input {\n    display: block;\n    margin-bottom: 10px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Button from '../Button/Button';\nimport { CustomForm } from './Form.styled';\n\nexport default function Form({ onSubmit} ) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4()\n  const numberInputId = uuidv4()\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) { \n      case 'name':\n        setName(value)\n        break\n      \n      case 'number':\n        setNumber(value)\n        break\n      \n      default:\n        return\n    }\n    \n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  const resetForm = () => { \n    setName('');\n    setNumber('');\n  }\n\n\n    return (\n      <CustomForm onSubmit={handleSubmit}>\n        <h3>Name</h3>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          value={name}\n          id={nameInputId}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          value={number}\n          id={numberInputId}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <Button type=\"submit\" text=\"Add contact\" />\n      </CustomForm>\n    );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background-color: #e9f043;\n  padding: 10px;\n`;\n","import { Container } from './Wrapper.styled';\n\nfunction Wrapper({ children }) {\n  return <Container>{children}</Container>;\n}\n\nexport default Wrapper;\n","import styled from '@emotion/styled/macro';\n\nexport const List = styled.ul`\n  list-style: square;\n  & li {\n    display: flex;\n    &:not(:last-child) {\n      margin-bottom: 10px;\n    }\n    & p:not(:last-child) {\n      margin-right: 10px;\n      margin-bottom: 0;\n    }\n  }\n`;\n","import { List } from './ContactList.styled';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => ( \n          <li key={id}>\n            <p>{name}:</p>\n            <p>{number}</p>\n            <button onClick={() => onDeleteContact(id)}>Delete</button>\n          </li>\n  ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nexport const Filter = ({ onChange }) => {\n  return (\n    <>\n      <h4>Find contacts by name</h4>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Filter by name\"\n        onChange={onChange}\n        required\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Form/Form';\nimport Wrapper from './Wrapper/Wrapper';\nimport ContactList from './ContactList/ContactList.jsx';\nimport { Filter } from './Filter/Filter';\nimport contactsList from './data/data.json';\n\n\nexport default function App() {\n  const [contacts, setContacts] = useState([])\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    setContacts(parsedContacts);\n  }, []);\n\n  useEffect(() => {\n   localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  const formHandleSubmit = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    setContacts(contacts => [newContact, ...contacts]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value );\n  };\n\n const deleteContact = contactId => {\n   setContacts(contacts => contacts.filter(({ id }) => id !== contactId));\n };\n  const normalizedFilter = filter.toLowerCase();\n  \n  const getVisibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <Wrapper>\n      <h2>Phonebook</h2>\n      <Form onSubmit={formHandleSubmit} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      {contacts.length > 0 && <ContactList\n        contacts={getVisibleContacts}\n        onDeleteContact={deleteContact}\n      />}\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}